1)What is Maven?

Maven is a tool that is used to compile, validate codes and analyse the test cases in the code.

Manages the building, reporting and documentation from source control management(SCM)

maven projects are configured through project object model(POM)

pom.xml file contains documentation for all of the objects, properties, methods and events.

2) what maven is capable of?

information of project is centralized through maven.

our software project is modeled by it

Build process is managed

Data about the software project is gathered and then build itself

document the software and our project

Deployable artifacts can be generated from source code

your source code is compiled, packed, test and distributed

Report is created website is generated for the project.

3)Maven Build Life Cycle

In maven the build is run using a predefined and ordered set of steps to call build life cycle

The build tasks that will be performed during each phase are determined by the configuration in the project file and in particular the selected packaging

maven relies on build lifecycle to define the process of building and distributing artifacts(eg: jar files ,war files)

there are three built in build life cycles

default handles project building and deployment

clean handles project cleaning

site handles projects site generation

4)maven artifacts

An artifact is a file resulting from packaging a project

can be jar,war, ear, .xml file for example 

artifacts are deployed in repositories so they can be used as dependencies by other projects

artifacts are identified by three components

Groupid: An unique identifier for a group of related artifacts, usually named like java packages(ex: pt.jpereira.mobile)

Artifactid: An unique identifier with in the context of groupid, that identifies the artifact(project)(Ex: puzzle)

version: also called artifact coordinates

5)Maven repository flow:
Step1: when developer executes mvn command it will go and checkin local repository.If found the dependencies or plugins in the local repository developers will see the output.

Step2: If not found in the local repository from developer machines it will go and search in remote repository

Step3: From remote repository required dependencies or plugins will get stored in local repository

Step4: from the local repository developer will get the output.

6)project object model:

pom for short

xml file located at the root of the project(pom.xml)

it includes configuration for your project including:
information about the project
configuration details to build the project
contains default values for most of the projects.Ex sourcedir,targetdir
Dependencies of the project
configuration about plugins and goals
used repositories

7)Declaring Dependencies

while declaring the dependencies, coordinates of the artifacts must be provided
groupid: a unique identifier for the group of related artifact

artifactid: an artifact is a file which is made after packaging a project and artifact is a unique identifier with in the context of groupid and it identifies the artifacts

version: it is an identifier for the release or build number of project

8)maven installation:

A system running windows
A working internet connection
Access to an account with administrator priviliges
access to the command prompt
A copy of java installed and ready to use, with the JAVA_HOME environment variable setup

step1: download maven zip file and extract 
step2: add maven_home system variable
step3:add maven_home directory in path variable

9)Install java on windows
prerequisites:
system running windows
internet connection
administrator priviliges
Step 1: Add Java to System Variables
Step 2: Add JAVA_HOME Variable



